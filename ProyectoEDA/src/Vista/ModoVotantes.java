/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Control.*;
import Modelo.Candidato;
import Modelo.Eleccion;
import Modelo.Mesa;
import Modelo.Voto;
import TDA.Stack;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class ModoVotantes extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal
     */
    
    RegistroEleccion objRegistroEleccion;
    RegistrarVoto objRegistroVoto;
    RegistroCandidato objRegistroCandidato;
    GestionarMesa objGestionarMesa;
    Eleccion elecciones;
    
    DefaultComboBoxModel modelCandidato;
    DefaultComboBoxModel modelFecha;
    DefaultComboBoxModel modelmesa;
    
    public ModoVotantes() {
        initComponents();
        
        
    }
    public ModoVotantes(RegistroEleccion objRegistroEleccion, RegistrarVoto objRegistroVoto,RegistroCandidato objRegistroCandidato, Eleccion elecciones, GestionarMesa objGestionarMesa) {
        initComponents();
        
        this.objGestionarMesa = objGestionarMesa;
        this.objRegistroEleccion = objRegistroEleccion;
        this.elecciones = elecciones;
        this.objRegistroVoto = objRegistroVoto;
        this.objRegistroCandidato = objRegistroCandidato;
        
        
        modelFecha = new DefaultComboBoxModel();
        this.cbxfecha.setModel(modelFecha);
        
        modelCandidato = new DefaultComboBoxModel();
        this.cbxcandidato.setModel(modelCandidato);
        
        modelmesa = new DefaultComboBoxModel();
        this.cbxmesa.setModel(modelmesa);
        
        
        llenarfecha();
        llenarCandidatos();
        llenarmesas();
        
        cbxfecha.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            llenarCandidatos();  
            llenarmesas();
            }
           }
        );
        
        
       
        
    }
    
    public void limpiarComboBoxF() {
        modelFecha = new DefaultComboBoxModel();
        this.cbxfecha.setModel(modelFecha);
    }
    
    public void limpiarComboBoxC() {
        modelCandidato = new DefaultComboBoxModel();
        this.cbxcandidato.setModel(modelCandidato);
    }
    
    public void limpiarComboBoxM() {
        modelmesa = new DefaultComboBoxModel();
        this.cbxmesa.setModel(modelmesa);
    }
    
    private void llenarfecha(){
        limpiarComboBoxF();
        
        
        Eleccion [] ListEleccion = this.objRegistroEleccion.getListaEleccion();
        
        for (int i = 0; i < ListEleccion.length; i++) {
            String fecha  = ListEleccion[i].getFecha();
            this.modelFecha.addElement(fecha);
        
    }
    }
    
    private void llenarCandidatos(){
        limpiarComboBoxC();        
        int indexFecha = cbxfecha.getSelectedIndex();
    
        if (indexFecha != -1) {
        
            Candidato[] listaCandidatos = this.objRegistroEleccion.getListaCandidatosDeVotacion(indexFecha);
            
            if (listaCandidatos != null) {
                for (Candidato candidato : listaCandidatos) {
                    if (candidato != null) {  
                        String nombreCompleto = candidato.getFullName();
                        this.modelCandidato.addElement(nombreCompleto); 
                    }
                }
            }
        }
    }
    
    private void llenarmesas(){
        limpiarComboBoxM();        
        int indexFecha = cbxfecha.getSelectedIndex();
    
        if (indexFecha != -1) {
        
            Mesa[] listaMesas = this.objRegistroEleccion.getMesasDeVotacion(indexFecha);
            
             if (listaMesas != null) {
            for (Mesa mesa : listaMesas) {
                if (mesa != null) {  
                    String nmesa = mesa.getNmesa();
                    this.modelmesa.addElement(nmesa); 
                }
            }
        }
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxcandidato = new javax.swing.JComboBox<>();
        buttonvotar = new javax.swing.JButton();
        buttonvotarnulo = new javax.swing.JButton();
        cbxfecha = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        bttnSalir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbxmesa = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("VOTACIÓN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Candidato:");

        cbxcandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxcandidatoActionPerformed(evt);
            }
        });

        buttonvotar.setText("Votar");
        buttonvotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonvotarActionPerformed(evt);
            }
        });

        buttonvotarnulo.setText("Voto nulo/en blanco");
        buttonvotarnulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonvotarnuloActionPerformed(evt);
            }
        });

        cbxfecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxfechaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Fecha de elección");

        bttnSalir.setText("Salir");
        bttnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSalirActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mesa");

        cbxmesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxmesaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxcandidato, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxmesa, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 56, Short.MAX_VALUE)
                .addComponent(bttnSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonvotar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonvotarnulo)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxmesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxcandidato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonvotar)
                    .addComponent(buttonvotarnulo)
                    .addComponent(bttnSalir))
                .addGap(72, 72, 72))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxcandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxcandidatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxcandidatoActionPerformed
    private void limpiar() {
        
        this.cbxcandidato.setSelectedIndex(0);
        //this.cbxfecha.setSelectedIndex(0);
    }
    private void buttonvotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonvotarActionPerformed
    int index = cbxfecha.getSelectedIndex();
    int indexm = cbxmesa.getSelectedIndex();
    
    try {
        String nombre = String.valueOf(this.cbxcandidato.getSelectedItem());
        Voto voto = new Voto(nombre);
        
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Mesa[] mesas = elecciones[index].getMesas();
        
        if (index >= 0 && index < elecciones.length && elecciones[index] != null) {
            
            mesas[indexm].agregarVoto(voto);
            JOptionPane.showMessageDialog(this, "Voto registrado con éxito!");
            
            
            System.out.println("Voto realizado en la elección: " + elecciones[index].getFecha()+ "----");
            System.out.print("Voto registrado en la mesa: " + mesas[indexm].getNmesa());
            
            Stack votos = mesas[indexm].getVotos();
            if (votos != null) {
                System.out.println("Votos registrados: ");
                for (int i = 0; i < votos.getSize(); i++) {
                    if (votos.getS()[i] != null) {
                        System.out.print(votos.getS()[i].getnombre() + "  ");
                    }
                }
                System.out.println("");
            }
            
            this.limpiar();
        } else {
            JOptionPane.showMessageDialog(this, "Error: Elección no válida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error en ingreso de datos: " + e.getMessage(), 
            "Error en el formulario", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonvotarActionPerformed

    private void cbxfechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxfechaActionPerformed
       
        llenarCandidatos();
    }//GEN-LAST:event_cbxfechaActionPerformed

    private void buttonvotarnuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonvotarnuloActionPerformed
    int index = cbxfecha.getSelectedIndex();
    int indexm = cbxmesa.getSelectedIndex();
    
    try {
        String nombre = "Nulo";
        Voto voto = new Voto(nombre);
        
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Mesa[] mesas = elecciones[index].getMesas();
        
        if (index >= 0 && index < elecciones.length && elecciones[index] != null) {
            
            mesas[indexm].agregarVoto(voto);
            
            JOptionPane.showMessageDialog(this, "Voto registrado con éxito!");
            
            System.out.println("Voto realizado en la elección: " + elecciones[index].getFecha()+ "---");
            System.out.print("Voto registrado en la mesa: " + mesas[indexm].getNmesa());
            
            Stack votos = mesas[indexm].getVotos();
            if (votos != null) {
                System.out.println("Votos registrados: ");
                for (int i = 0; i < votos.getSize(); i++) {
                    if (votos.getS()[i] != null) {
                        System.out.print(votos.getS()[i].getnombre() + "  ");
                    }
                }
                System.out.println("");
            }
            
            this.limpiar();
        } else {
            JOptionPane.showMessageDialog(this, "Error: Elección no válida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error en ingreso de datos: " + e.getMessage(), 
            "Error en el formulario", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_buttonvotarnuloActionPerformed

    private void bttnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSalirActionPerformed
     this.dispose();
    }//GEN-LAST:event_bttnSalirActionPerformed

    private void cbxmesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxmesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxmesaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModoVotantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModoVotantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModoVotantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModoVotantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModoVotantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnSalir;
    private javax.swing.JButton buttonvotar;
    private javax.swing.JButton buttonvotarnulo;
    private javax.swing.JComboBox<String> cbxcandidato;
    private javax.swing.JComboBox<String> cbxfecha;
    private javax.swing.JComboBox<String> cbxmesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
