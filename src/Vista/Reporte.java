/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Control.RegistroEleccion;
import Modelo.ActaElectoral;
import Modelo.ConteoVoto;
import Modelo.Eleccion;
import Modelo.Mesa;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author vleos
 */
public class Reporte extends javax.swing.JFrame {

    /**
     * Creates new form Reporte
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltotal = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbxmesa = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabrecuento = new javax.swing.JTable();
        cbxfecha = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bttnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Reporte por mesas");

        tbltotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbltotal);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Reporte final");

        cbxmesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabrecuento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabrecuento);

        cbxfecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Fecha:");

        jLabel4.setText("Mesa:");

        bttnSalir.setText("Salir");
        bttnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbxfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(cbxmesa, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGap(425, 425, 425)
                .addComponent(bttnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(152, 152, 152)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(670, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(cbxmesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(bttnSalir)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(jLabel2)
                    .addContainerGap(403, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_bttnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    RegistroEleccion objRegistroEleccion;
    
    DefaultComboBoxModel modelFecha; 
    DefaultComboBoxModel modelmesa;
    
    DefaultTableModel tablemesa;
    DefaultTableModel tabletotal;
    
    public Reporte() {
        initComponents();
    }
    
    public Reporte(RegistroEleccion objRegistroEleccion) {
        initComponents();
        
        this.objRegistroEleccion = objRegistroEleccion;
        
        llenarfecha();
        llenarmesas();
        

        ActualizarXMesa();
        VotosTotales();
        cbxfecha.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ActualizarXMesa();
            llenarmesas();
            VotosTotales();
            
        }
        });
        cbxmesa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ActualizarXMesa(); 
           
        }
        });
    
    }
    
    private final String[] COLUMNS = new String[]{
            "Candidato", "NÃºmero de Votos"
        };
    
    public void limpiarTabla() {
        tablemesa = new DefaultTableModel();
        this.tabrecuento.setModel(tablemesa);

        for (String column : COLUMNS) {
           tablemesa.addColumn(column); 
        }
    }
    
    
    public void limpiarTablaTotal() {
        tabletotal = new DefaultTableModel();
        this.tbltotal.setModel(tabletotal);

        for (String column : COLUMNS) {
           tabletotal.addColumn(column); 
        }
    }
    
    private void ActualizarXMesa() {
        this.limpiarTabla();
    
        int indexFecha = cbxfecha.getSelectedIndex();
        int indexMesa = cbxmesa.getSelectedIndex();
    
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Eleccion actual = elecciones[indexFecha];
        Mesa[] listaMesa = actual.getMesas();
        Mesa actualMesa = listaMesa[indexMesa];
        ActaElectoral acta = actualMesa.getActa();
    
        ConteoVoto[] votos = acta.getConteovoto();
    
        for (int i = 0; i < votos.length; i++) {
            String[] fila = new String[COLUMNS.length];
            fila[0] = votos[i].getNombreCandidato();
            fila[1] = String.valueOf(votos[i].getCantidadVotos());
            tablemesa.addRow(fila);
        }
}
    
    private void VotosTotales() {
        this.limpiarTablaTotal();
        int indexFecha = cbxfecha.getSelectedIndex();
    
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Eleccion actual = elecciones[indexFecha];
        Mesa[] listaMesa = actual.getMesas();
    

        ConteoVoto[] conteoTotal = new ConteoVoto[100]; 
        int cantidadCandidatos = 0;
        int totalVotosGeneral = 0;
    
        
        for (Mesa mesa : listaMesa) {
            if (mesa != null && mesa.getActa() != null) {
                ConteoVoto[] conteosEnMesa = mesa.getActa().getConteovoto();
                if (conteosEnMesa != null) {
                    for (ConteoVoto conteoMesa : conteosEnMesa) {
                        if (conteoMesa != null) {
                            boolean encontrado = false;
                            String candidatoActual = conteoMesa.getNombreCandidato();
                            int votosActuales = conteoMesa.getCantidadVotos();
                            totalVotosGeneral += votosActuales;

                           
                            for (int i = 0; i < cantidadCandidatos; i++) {
                                if (conteoTotal[i].getNombreCandidato().equals(candidatoActual)) {
                                    
                                    for (int j = 0; j < votosActuales; j++) {
                                        conteoTotal[i].incrementarVotos();
                                    }
                                    encontrado = true;
                                    break;
                                }
                            }

                           
                            if (!encontrado) {
                                ConteoVoto nuevoConteo = new ConteoVoto(candidatoActual);
                                
                                for (int i = 0; i < votosActuales - 1; i++) {
                                    nuevoConteo.incrementarVotos();
                                }
                                conteoTotal[cantidadCandidatos] = nuevoConteo;
                                cantidadCandidatos++;
                            }
                        }
                    }
                }
            }
        }
    

        for (int i = 0; i < cantidadCandidatos - 1; i++) {
            for (int j = 0; j < cantidadCandidatos - i - 1; j++) {
                if (conteoTotal[j].getNombreCandidato().compareTo(
                    conteoTotal[j + 1].getNombreCandidato()) > 0) {
                   
                    ConteoVoto temp = conteoTotal[j];
                    conteoTotal[j] = conteoTotal[j + 1];
                    conteoTotal[j + 1] = temp;
                }
            }
        }

        
        for (int i = 0; i < cantidadCandidatos; i++) {
            String[] fila = new String[COLUMNS.length];
            fila[0] = conteoTotal[i].getNombreCandidato();

            int votos = conteoTotal[i].getCantidadVotos();
            double porcentaje = (votos * 100.0) / totalVotosGeneral;
            
            fila[1] = String.format("%d (%,.2f%%)", votos, porcentaje);

            tabletotal.addRow(fila);
        }

        
        String[] filaTotal = new String[COLUMNS.length];
        filaTotal[0] = "TOTAL";
        filaTotal[1] = String.valueOf(totalVotosGeneral);
        tabletotal.addRow(filaTotal);
}
    
    
    public void limpiarComboBoxF() {
        modelFecha = new DefaultComboBoxModel();
        this.cbxfecha.setModel(modelFecha);
    }
    
    private void llenarfecha(){
        limpiarComboBoxF();
        
        
        Eleccion [] ListEleccion = this.objRegistroEleccion.getListaEleccion();
        
        for (int i = 0; i < ListEleccion.length; i++) {
            String fecha  = ListEleccion[i].getFecha();
            this.modelFecha.addElement(fecha);
        
    }
    }
    
    public void limpiarComboBoxM() {
        modelmesa = new DefaultComboBoxModel();
        this.cbxmesa.setModel(modelmesa);
    }
    private void llenarmesas(){
        limpiarComboBoxM();        
        int indexFecha = cbxfecha.getSelectedIndex();
    
        if (indexFecha != -1) {
        
            Mesa[] listaMesas = this.objRegistroEleccion.getMesasDeVotacion(indexFecha);
            
            if (listaMesas != null) {
            for (Mesa mesa : listaMesas) {
                if (mesa != null) {  
                    String nmesa = mesa.getNmesa();
                    this.modelmesa.addElement(nmesa); 
                }
            }
        }
    }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reporte().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnSalir;
    private javax.swing.JComboBox<String> cbxfecha;
    private javax.swing.JComboBox<String> cbxmesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabrecuento;
    private javax.swing.JTable tbltotal;
    // End of variables declaration//GEN-END:variables
}
