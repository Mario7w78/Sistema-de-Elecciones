/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Control.RegistroEleccion;
import Modelo.ActaElectoral;
import Modelo.Eleccion;
import Modelo.Mesa;
import Modelo.Miembro;
import Modelo.Voto;
import Modelo.ConteoVoto;
import TDA.Stack;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author vleos
 */


public class RegistrarActas extends javax.swing.JFrame {
    RegistroEleccion objRegistroEleccion;
    DefaultComboBoxModel modelmesa;
    DefaultComboBoxModel modelFecha;
    DefaultListModel modelmiembros;
    
    
    
    /**
     * Creates new form Candidatos
     */
    public RegistrarActas() {
        initComponents();
    }

    public RegistrarActas(RegistroEleccion objRegistroEleccion) {
        initComponents();
    this.objRegistroEleccion = objRegistroEleccion;
    
    llenarfecha();
    llenarmesas();
    llenarMiembros();

    // Llama a conteoxmesa al abrir la ventana con los votos de la mesa seleccionada
    actualizarRecuentoInicial();

        cbxfecha.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            llenarmesas();
            llenarMiembros();
            actualizarRecuentoInicial();  // Actualiza cuando se cambia la fecha
        }
        });
        cbxmesa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            llenarMiembros();
            actualizarRecuentoInicial();  // Actualiza cuando se cambia la mesa
        }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     private void actualizarRecuentoInicial() {
    int indexFecha = cbxfecha.getSelectedIndex();
    int indexMesa = cbxmesa.getSelectedIndex();

    if (indexFecha != -1 && indexMesa != -1) {
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Eleccion actual = elecciones[indexFecha];
        Mesa[] listaMesa = actual.getMesas();
        Mesa actualMesa = listaMesa[indexMesa];
        Stack votos = actualMesa.getVotos();
        
        conteoxmesa(votos);  // Llama a conteoxmesa con los votos de la mesa seleccionada
    }
    }

    public void limpiarComboBoxF() {
        modelFecha = new DefaultComboBoxModel();
        this.cbxfecha.setModel(modelFecha);
    }
    
    public void limpiarListaM() {
        modelmiembros = new DefaultListModel();
        this.lista.setModel(modelmiembros);
    }
    
    public void limpiarComboBoxM() {
        modelmesa = new DefaultComboBoxModel();
        this.cbxmesa.setModel(modelmesa);
    }
    
    
    
    private void llenarfecha(){
        limpiarComboBoxF();
        
        
        Eleccion [] ListEleccion = this.objRegistroEleccion.getListaEleccion();
        
        for (int i = 0; i < ListEleccion.length; i++) {
            String fecha  = ListEleccion[i].getFecha();
            this.modelFecha.addElement(fecha);
        
    }
    }
    
     private void llenarMiembros(){
         limpiarListaM();
        int count = 0;
        if(this.cbxmesa.getSelectedIndex()!= -1){
            Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
            Eleccion actual = elecciones[cbxfecha.getSelectedIndex()];
            
            Mesa[] listaMesa = actual.getMesas();
            System.out.println("length"+listaMesa.length);
            Mesa actualMesa = listaMesa[cbxmesa.getSelectedIndex()];
            Miembro[] miembros = actualMesa.getMiembros();
            txtlugar.setText(actualMesa.getUbicacion());
            if (miembros == null || miembros.length == 0) {
                System.out.println("El arreglo de miembros está vacío. No hay elementos para mostrar en la tabla.");
            return;
            }
            if (miembros!= null){
        
            for (int i = 0; i < miembros.length; i++) {
                Miembro miembro = miembros[i];

            
            if (miembro != null) {  
        
                modelmiembros.addElement(miembro.getFullName());
                
            }
        }
        }
        
        }
        
    }
      
    private void llenarmesas(){
        limpiarComboBoxM();        
        int indexFecha = cbxfecha.getSelectedIndex();
    
        if (indexFecha != -1) {
        
            Mesa[] listaMesas = this.objRegistroEleccion.getMesasDeVotacion(indexFecha);
            
            // Verificar que la lista no esté vacía
             if (listaMesas != null) {
            for (Mesa mesa : listaMesas) {
                if (mesa != null) {  // Verificar que el candidato no sea null
                    String nmesa = mesa.getNmesa();
                    this.modelmesa.addElement(nmesa); 
                }
            }
        }
    }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbxmesa = new javax.swing.JComboBox<>();
        txttitulo = new javax.swing.JTextField();
        txthora = new javax.swing.JTextField();
        txtlugar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        bttnregistrar = new javax.swing.JButton();
        cbxfecha = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabrecuento = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtobser = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Registrar Acta");

        jLabel1.setText("Titulo");

        jLabel3.setText("Fecha");

        jLabel4.setText("Hora de votación");

        jLabel5.setText("Lugar de votación");

        jLabel6.setText("Mesa electoral:");

        cbxmesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txttitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttituloActionPerformed(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bttnregistrar.setText("Registrar");
        bttnregistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnregistrarActionPerformed(evt);
            }
        });

        cbxfecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabrecuento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabrecuento);

        jLabel8.setText("Miembros:");

        lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lista);

        jLabel9.setText("Recuento:");

        txtobser.setColumns(20);
        txtobser.setRows(5);
        jScrollPane3.setViewportView(txtobser);

        jLabel7.setText("Observaciones:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtlugar, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(txthora, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(txttitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(cbxfecha, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxmesa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(bttnregistrar)
                        .addGap(173, 173, 173)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(330, 330, 330)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txttitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbxfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txthora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtlugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbxmesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnregistrar)
                    .addComponent(jButton1))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txttituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttituloActionPerformed

public ConteoVoto[] conteoxmesa(Stack votos) {
    Stack pilaAux = new Stack(votos.getSize());
    
    ConteoVoto[] conteos = new ConteoVoto[votos.getSize()];
    int numConteos = 0;
    
    while (!votos.isEmpty()) {
        Voto votoActual = votos.pop(); 
        
        if (votoActual != null) {
            
            String nombreVoto;
            if (votoActual.getnombre().equals("nulo")) {
                nombreVoto = "nulo";
            } else {
                nombreVoto = votoActual.getnombre();
            }
            
            boolean encontrado = false;
            for (int i = 0; i < numConteos; i++) {
                
                if (conteos[i].getNombreCandidato().equals(nombreVoto)) {
                    conteos[i].incrementarVotos();
                    encontrado = true;
                    break;
                }
            }
            
            if (!encontrado && numConteos < conteos.length) {
                conteos[numConteos] = new ConteoVoto(nombreVoto);
                numConteos++;
            }
            
            pilaAux.push(votoActual);
        }
    }
    
    while (!pilaAux.isEmpty()) {
        Voto voto = pilaAux.pop();
        if (voto != null) {
            votos.push(voto);
        }
    }
    
    javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
    model.addColumn("Candidato");
    model.addColumn("Cantidad de Votos");
    
    for (int i = 0; i < numConteos; i++) {
        model.addRow(new Object[]{conteos[i].getNombreCandidato(), conteos[i].getCantidadVotos()});
    }
    
    tabrecuento.setModel(model);

    
    ConteoVoto[] conteoVotosArray = new ConteoVoto[numConteos];
    System.arraycopy(conteos, 0, conteoVotosArray, 0, numConteos);
    
    return conteoVotosArray; 
}
  

private void limpiarFormulario() {
    
    txttitulo.setText("");
    txthora.setText("");
    txtlugar.setText("");
    txtobser.setText("");
    
    if (cbxfecha.getItemCount() > 0) {
        cbxfecha.setSelectedIndex(0);
    }
    if (cbxmesa.getItemCount() > 0) {
        cbxmesa.setSelectedIndex(0);
    }
    
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tabrecuento.getModel();
    model.setRowCount(0);
    
    DefaultListModel modeloLista = new DefaultListModel();
    lista.setModel(modeloLista);
}

    private void bttnregistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnregistrarActionPerformed
      try {
          
        String titulo = this.txttitulo.getText();
        String fecha = String.valueOf(this.cbxfecha.getSelectedItem());
        String hora = this.txthora.getText();
        String lugar = this.txtlugar.getText();
        String obs = this.txtobser.getText();
            
        
        Eleccion[] elecciones = objRegistroEleccion.getListaEleccion();
        Eleccion actual = elecciones[cbxfecha.getSelectedIndex()];
        Mesa[] listaMesa = actual.getMesas();
        Mesa actualMesa = listaMesa[cbxmesa.getSelectedIndex()];
        Miembro[] miembros = actualMesa.getMiembros(); 
        Stack votos = actualMesa.getVotos();
            
        ConteoVoto[] conteoVotos = conteoxmesa(votos);  

        ActaElectoral acta = new ActaElectoral(titulo, fecha, hora, lugar, obs, miembros,conteoVotos );
        actualMesa.setActa(acta);
        
        
        JOptionPane.showMessageDialog(this,
            "Acta registrada exitosamente",
            "Registro exitoso",
            JOptionPane.INFORMATION_MESSAGE);
            
        limpiarFormulario();
       
        
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, 
            "Error en ingreso de datos: " + e.getMessage(), 
            "Error en el formulario", 
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_bttnregistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarActas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnregistrar;
    private javax.swing.JComboBox<String> cbxfecha;
    private javax.swing.JComboBox<String> cbxmesa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lista;
    private javax.swing.JTable tabrecuento;
    private javax.swing.JTextField txthora;
    private javax.swing.JTextField txtlugar;
    private javax.swing.JTextArea txtobser;
    private javax.swing.JTextField txttitulo;
    // End of variables declaration//GEN-END:variables
}
